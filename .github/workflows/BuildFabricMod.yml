name: Build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Find Gradle project root
      id: find
      run: |
        set -e
        FILE=$(git ls-files | grep -E '(^|/)(settings.gradle|settings.gradle.kts|build.gradle|build.gradle.kts)$' | head -n1 || true)
        if [ -z "$FILE" ]; then
          echo "project_root=NO" >> $GITHUB_OUTPUT
          echo "No Gradle build files found in repository"
          exit 0
        fi
        DIR=$(dirname "$FILE")
        echo "project_root=${DIR}" >> $GITHUB_OUTPUT
        echo "Found Gradle project at '${DIR}'"

    - name: Set GRADLE_USER_HOME to isolated temp cache
      if: steps.find.outputs.project_root != 'NO'
      run: |
        echo "GRADLE_USER_HOME=$RUNNER_TEMP/gradle-cache" >> $GITHUB_ENV
        echo "GRADLE_USER_HOME set to $RUNNER_TEMP/gradle-cache"

    - name: Setup Java
      if: steps.find.outputs.project_root != 'NO'
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle (for wrapper generation)
      if: steps.find.outputs.project_root != 'NO'
      uses: gradle/actions/setup-gradle@v5
      with:
        gradle-version: '8.3'

    - name: Clean any stale Gradle / Loom caches
      if: steps.find.outputs.project_root != 'NO'
      run: |
        echo "GRADLE_USER_HOME=$GRADLE_USER_HOME"
        rm -rf "$GRADLE_USER_HOME"/*
        rm -rf "${{ steps.find.outputs.project_root }}/.gradle"
        curl -sSf https://meta.fabricmc.net/v2/versions/game | head -c 200 || true

    - name: Generate Gradle wrapper (ephemeral)
      if: steps.find.outputs.project_root != 'NO'
      working-directory: ${{ steps.find.outputs.project_root }}
      run: gradle wrapper --gradle-version 8.3 --distribution-type all

    - name: Make wrapper executable
      if: steps.find.outputs.project_root != 'NO'
      run: chmod +x ${{ steps.find.outputs.project_root }}/gradlew

    - name: Print versions (debug)
      if: steps.find.outputs.project_root != 'NO'
      working-directory: ${{ steps.find.outputs.project_root }}
      run: |
        echo "Java:"
        java -version || true
        echo "System gradle (for debug):"
        gradle --version || true
        ./gradlew --version || true

    - name: Build with Gradle wrapper (refresh deps + stacktrace)
      if: steps.find.outputs.project_root != 'NO'
      working-directory: ${{ steps.find.outputs.project_root }}
      run: ./gradlew build --no-daemon --no-parallel --refresh-dependencies --stacktrace
